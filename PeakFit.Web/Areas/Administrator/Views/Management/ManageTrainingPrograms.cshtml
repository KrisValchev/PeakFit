@using static PeakFit.Web.Extensions.ClaimsPrincipalExtensions
@using static PeakFit.Core.Constants.RoleConstants
@inject PeakFit.Core.Contracts.ITrainerService trainerService
@model PeakFit.Core.Models.TrainingProgramModels.AllTrainingProgramQueryModel
@{
	ViewData["Title"] = "Manage Training Programs";
}

<h2 class="text-center">@ViewData["Title"]</h2>
<link rel="stylesheet" href="~/css/trainingProgramCard.css" />

<form method="get">
	<div class="container">
		<div class="search-filter-sort row align-items-center" style="width:40vw;text-align:center">
			<div class="form-group col-md-3">
				<label asp-for="Search"></label>
				<input asp-for="Search" class="form-control" placeholder="Type here....">
			</div>
			<div class="col-md-2" style="width:200px">
				<label asp-for="Category"></label>
				<select asp-for="Category" class="form-control">
					<option value="">All</option>
					@foreach (var category in Model.Categories)
					{
						<option value="@category">@category</option>
					}
				</select>
			</div>
			<div class="col-md-2">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Newest</option>
					<option value="1">Oldest</option>
					<option value="2">Rating (Ascending)</option>
					<option value="3">Rating (Descending)</option>
				</select>
			</div>
			<div class="col-md-3">
				<div class="form-group mt-4 p-2">
					<input type="submit" value="Search" class="btn btn-dark" />
				</div>
			</div>
		</div>
	</div>
</form>

@if (!Model.TrainingPrograms.Any())
{
	<h2 class="text-center">No programs found!</h2>
}
<div class="row">
	<div class="col-md-12 mb-3">
		<div class="card">
			<div class="card-header">
				<span><i class="bi bi-table me-2"></i></span> The latest 15
			</div>
			<div class="card-body">
				<div class="table-responsive">
					<table id="example"
						   class="table table-striped data-table"
						   style="width: 100%">
						<thead>
							<tr>
								<th>Trainer name</th>
								<th>Program category</th>
								<th>Exercises count</th>
								<th>Average rating</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.TrainingPrograms)
							{
								<tr>
									<td>@item.TrainerUserName</td>
									<td>@item.CategoryName</td>
									<td>@item.ExerciseCount</td>
									<td>@(@item.Ratings.Any()==true ? @item.Ratings.Average(x=>x.Value):0)</td>
									<td>
										<a asp-area="" asp-controller="TrainingProgram" asp-action="Delete" asp-route-id="@item.Id" style="margin-bottom:auto;">
											<button type="submit" class="btn btn-danger">Delete</button>
										</a>
									</td>
									<td><a asp-area="" asp-action="Edit" asp-controller="TrainingProgram" asp-route-id="@item.Id" class="btn btn-warning">Edit</a></td>
								</tr>
							}
						</tbody>
						<tfoot>
							<tr>
								<th>Trainer name</th>
								<th>Program category</th>
								<th>Exercises count</th>
								<th>Average rating</th>
							</tr>
						</tfoot>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<div style="width:100%;">
	@if (Model.TotalTrainingProgramsCount > Model.TrainingProgramPerPage)
	{
		<nav aria-label="Page navigation" style="padding-top:2px;display:flex;justify-content:center;">

			<ul class="pagination">
				@{
					var previousPage = Model.CurrentPage - 1;
					if (previousPage < 1)
					{
						previousPage = 1;
					}

					var maxPage = Math.Ceiling((double)Model.TotalTrainingProgramsCount /
					Model.TrainingProgramPerPage);
				}
				@if (Model.CurrentPage != 1)
				{
					<li class="page-item">


						<a class="btn btn-dark"
						   asp-controller="Management"
						   asp-action="ManageTrainingPrograms"
						   asp-route-currentPage="@previousPage"
						   asp-route-searchTerm="@Model.Search"
						   asp-route-sorting="@((int)Model.Sorting)">Previous</a>

					</li>
				}
				@for (int i = 0; i < Math.Ceiling((double)Model.TotalTrainingProgramsCount / Model.TrainingProgramPerPage); i++)
				{
					<li class="page-item">

						<a class="btn btn-@(Model.CurrentPage != (i+1)  ? "light" : "dark")"
						   asp-controller="Management"
						   asp-action="ManageTrainingPrograms"
						   asp-route-currentPage="@(i+1)"
						   asp-route-searchTerm="@Model.Search"
						   asp-route-sorting="@((int)Model.Sorting)">@(i + 1)</a>

					</li>
				}
				@if (Model.CurrentPage < maxPage)
				{
					<li class="page-item">

						<a class="btn btn-dark"
						   asp-controller="Management"
						   asp-action="ManageTrainingPrograms"
						   asp-route-currentPage="@(Model.CurrentPage + 1)"
						   asp-route-searchTerm="@Model.Search"
						   asp-route-sorting="@((int)Model.Sorting)">Next</a>

					</li>
				}
			</ul>

		</nav>
	}
</div>
</section>

